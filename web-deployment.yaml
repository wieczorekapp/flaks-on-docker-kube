apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.prod.yml convert
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f docker-compose.prod.yml convert
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/docker-compose-default: "true"
        io.kompose.service: web
    spec:
      containers:
        - args:
            - gunicorn
            - --bind
            - 0.0.0.0:5000
            - manage:app
          env:
            - name: DATABASE
              valueFrom:
                configMapKeyRef:
                  key: DATABASE
                  name: env-prod
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_URL
                  name: env-prod
            - name: FLASK_APP
              valueFrom:
                configMapKeyRef:
                  key: FLASK_APP
                  name: env-prod
            - name: FLASK_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: FLASK_DEBUG
                  name: env-prod
            - name: SQL_HOST
              valueFrom:
                configMapKeyRef:
                  key: SQL_HOST
                  name: env-prod
            - name: SQL_PORT
              valueFrom:
                configMapKeyRef:
                  key: SQL_PORT
                  name: env-prod
          image: web
          name: web
          ports:
            - containerPort: 5000
          resources: {}
      restartPolicy: Always
status: {}
